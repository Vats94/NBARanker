{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VatsalVed\\\\Desktop\\\\Files\\\\Ranker\\\\ranker\\\\src\\\\components\\\\vote.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.rank\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.playerName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.Elo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = Record;\nexport default class vote extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.state = {\n      records: []\n    };\n  } // This method will get the data from the database.\n\n\n  componentDidMount() {\n    axios.get(\"http://localhost:3000/record/\").then(response => {\n      this.setState({\n        records: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // This method will map out the users on the table\n\n\n  recordList() {\n    let sortedElos = this.state.records.sort(function (a, b) {\n      return parseFloat(b.Elo) - parseFloat(a.Elo);\n    });\n    console.log(sortedElos);\n    var rankedElos = [];\n\n    for (var i = 0; i < sortedElos.length; i++) {\n      rankedElos[i] = {\n        'id': sortedElos[i]['id'],\n        'playerName': sortedElos[i].playerName,\n        'Elo': sortedElos[i].Elo,\n        'rank': i + 1\n      };\n    }\n\n    console.log(rankedElos);\n    return rankedElos.map(currentrecord => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: currentrecord\n      }, currentrecord._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this);\n    });\n  } // This following section will display the table with the records of individuals.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-primary\",\n        children: \"Left Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-primary\",\n        children: \"Right Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-primary\",\n        children: \"Undecided\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"sources":["C:/Users/VatsalVed/Desktop/Files/Ranker/ranker/src/components/vote.js"],"names":["React","Component","axios","Link","Record","props","record","rank","playerName","Elo","vote","constructor","state","records","componentDidMount","get","then","response","setState","data","catch","error","console","log","recordList","sortedElos","sort","a","b","parseFloat","rankedElos","i","length","map","currentrecord","_id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,iBACb;AAAA,0BACE;AAAA,cAAKA,KAAK,CAACC,MAAN,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,cAAKF,KAAK,CAACC,MAAN,CAAaE;AAAlB;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA,cAAKH,KAAK,CAACC,MAAN,CAAaG;AAAlB;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAML,M;AASN,eAAe,MAAMM,IAAN,SAAmBT,SAAnB,CAA6B;AAC1C;AACAU,EAAAA,WAAW,CAACN,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKO,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD,GALyC,CAO1C;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBZ,IAAAA,KAAK,CACFa,GADH,CACO,+BADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAEI,QAAQ,CAACE;AAApB,OAAd;AACD,KAJH,EAKGC,KALH,CAKS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPH;AAQD,GAjByC,CAoB1C;;;AACAG,EAAAA,UAAU,GAAG;AACX,QAAIC,UAAU,GAAG,KAAKb,KAAL,CAAWC,OAAX,CAAmBa,IAAnB,CAAwB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACtD,aAAOC,UAAU,CAACD,CAAC,CAACnB,GAAH,CAAV,GAAoBoB,UAAU,CAACF,CAAC,CAAClB,GAAH,CAArC;AACD,KAFgB,CAAjB;AAGAa,IAAAA,OAAO,CAACC,GAAR,CAAYE,UAAZ;AACA,QAAIK,UAAU,GAAG,EAAjB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,UAAU,CAACO,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACxCD,MAAAA,UAAU,CAACC,CAAD,CAAV,GAAgB;AACE,cAAMN,UAAU,CAACM,CAAD,CAAV,CAAc,IAAd,CADR;AAEE,sBAAaN,UAAU,CAACM,CAAD,CAAV,CAAcvB,UAF7B;AAGE,eAAOiB,UAAU,CAACM,CAAD,CAAV,CAActB,GAHvB;AAIE,gBAAQsB,CAAC,GAAC;AAJZ,OAAhB;AAMD;;AACDT,IAAAA,OAAO,CAACC,GAAR,CAAYO,UAAZ;AACA,WAAOA,UAAU,CAACG,GAAX,CAAgBC,aAAD,IAAmB;AACvC,0BACE,QAAC,MAAD;AACE,QAAA,MAAM,EAAEA;AADV,SAEOA,aAAa,CAACC,GAFrB;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPM,CAAP;AAQD,GA5CyC,CA8C1C;;;AACAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA7DyC","sourcesContent":["import React, { Component } from \"react\";\r\n// This will require to npm install axios\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Record = (props) => (\r\n  <tr>\r\n    <td>{props.record.rank}</td>\r\n    <td>{props.record.playerName}</td>\r\n    <td>{props.record.Elo}</td>\r\n  </tr>\r\n);\r\n\r\n\r\nexport default class vote extends Component {\r\n  // This is the constructor that shall store our data retrieved from the database\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { records: [] };\r\n  }\r\n\r\n  // This method will get the data from the database.\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:3000/record/\")\r\n      .then((response) => {\r\n        this.setState({ records: response.data });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n  // This method will map out the users on the table\r\n  recordList() {\r\n    let sortedElos = this.state.records.sort(function(a, b) {\r\n      return parseFloat(b.Elo) - parseFloat(a.Elo);\r\n    });\r\n    console.log(sortedElos)\r\n    var rankedElos = []\r\n    for(var i = 0; i < sortedElos.length; i++){\r\n      rankedElos[i] = {\r\n                        'id': sortedElos[i]['id'],\r\n                        'playerName':sortedElos[i].playerName,\r\n                        'Elo': sortedElos[i].Elo,\r\n                        'rank': i+1\r\n                        }\r\n    }\r\n    console.log(rankedElos)\r\n    return rankedElos.map((currentrecord) => {\r\n      return (\r\n        <Record\r\n          record={currentrecord}\r\n          key={currentrecord._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  // This following section will display the table with the records of individuals.\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button class=\"btn btn-primary\">\r\n          Left Player\r\n        </button>\r\n        <button class=\"btn btn-primary\">\r\n          Right Player\r\n        </button>\r\n        <button class=\"btn btn-primary\">\r\n          Undecided\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}